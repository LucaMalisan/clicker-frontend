{"ast":null,"code":"import { io } from \"socket.io-client\";\nimport { Router } from \"@angular/router\";\nimport { ReplaySubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let CoreService = /*#__PURE__*/(() => {\n  class CoreService {\n    router;\n    //TODO env variable\n    url = 'http://localhost:3000';\n    socket;\n    initialized = new ReplaySubject();\n    constructor(router) {\n      this.router = router;\n      this.socket = io(this.url, {\n        reconnection: false\n      });\n      this.socket.on('connect', () => {\n        console.log(\"connection attempt started\");\n        let jwt = localStorage.getItem('jwt');\n        let refreshToken = localStorage.getItem('refresh-token');\n        let tokens = {\n          jwt: jwt,\n          refreshToken: refreshToken\n        };\n        this.sendData('register', JSON.stringify(tokens), response => {\n          let json = JSON.parse(response);\n          console.log(\"JWT token is valid: \" + json.success);\n          if (!json.success) {\n            this.router.navigate(['login']);\n          }\n          localStorage.setItem('jwt', json.jwt);\n          this.initialized.next(true);\n        });\n      });\n    }\n    sendData(event, data, handler = undefined) {\n      handler = handler ? handler : () => {};\n      this.socket.emit(event, data, handler);\n    }\n    listen(event, handler) {\n      this.socket.on(event, handler);\n    }\n    static ɵfac = function CoreService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CoreService)(i0.ɵɵinject(i1.Router));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CoreService,\n      factory: CoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CoreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}