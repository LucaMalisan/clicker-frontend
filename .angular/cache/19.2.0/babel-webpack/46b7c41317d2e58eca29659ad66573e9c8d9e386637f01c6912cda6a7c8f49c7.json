{"ast":null,"code":"import { Router, RouterLink } from '@angular/router';\nimport { CoreService } from '../core.service';\nimport { FormControl, ReactiveFormsModule } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = () => [\"/login/\"];\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    coreService;\n    router;\n    userName;\n    password;\n    responseMessage;\n    constructor(coreService, router) {\n      this.coreService = coreService;\n      this.router = router;\n      this.userName = new FormControl('');\n      this.password = new FormControl('');\n    }\n    ngOnInit() {\n      this.coreService.listen('registration-successful', () => {\n        console.log(\"Registration successful\");\n        this.router.navigate(['login']).then(response => console.log(`Redirect to login : ${response}`));\n      });\n    }\n    onRegister(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const registrationInfo = {\n        userName: this.userName.value,\n        password: this.password.value\n      };\n      this.coreService.sendData(\"register-user\", JSON.stringify(registrationInfo), response => this.responseMessage = response);\n    }\n    static ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.CoreService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-registration\"]],\n      decls: 12,\n      vars: 5,\n      consts: [[1, \"form-signin\"], [1, \"form-signin-heading\"], [\"type\", \"text\", \"id\", \"inputUserName\", \"placeholder\", \"User Name\", \"required\", \"\", \"autofocus\", \"\", 1, \"input-field\", 3, \"formControl\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"input-field\", 3, \"formControl\"], [\"type\", \"button\", 3, \"click\"], [1, \"error\"], [3, \"routerLink\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Please register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"input\", 2)(4, \"input\", 3);\n          i0.ɵɵelementStart(5, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_5_listener($event) {\n            return ctx.onRegister($event);\n          });\n          i0.ɵɵtext(6, \"Register\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"p\", 5);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"br\");\n          i0.ɵɵelementStart(10, \"a\", 6);\n          i0.ɵɵtext(11, \" Go to login \");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formControl\", ctx.userName);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formControl\", ctx.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.responseMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n        }\n      },\n      dependencies: [ReactiveFormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.FormControlDirective, RouterLink],\n      styles: [\".form-signin[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.form-signin[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus{z-index:2}\"]\n    });\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}