{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { CoreService } from '../core.service';\nimport { FormControl, ReactiveFormsModule } from \"@angular/forms\";\nlet LoginComponent = class LoginComponent {\n  coreService;\n  router;\n  userName;\n  password;\n  errorMessage;\n  constructor(coreService, router) {\n    this.coreService = coreService;\n    this.router = router;\n    this.userName = new FormControl('');\n    this.password = new FormControl('');\n  }\n  ngOnInit() {\n    this.errorMessage = \"\";\n    //TODO use HTTP-Only Cookies\n    this.coreService.listen('login-successful', tokens => {\n      let json = JSON.parse(tokens);\n      localStorage.setItem('jwt', json.jwt);\n      localStorage.setItem('refresh-token', json.refreshToken);\n      this.router.navigate(['chat']);\n    });\n  }\n  onSignIn(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const loginInfo = {\n      userName: this.userName.value,\n      password: this.password.value\n    };\n    this.coreService.sendData(\"login-user\", JSON.stringify(loginInfo), response => this.errorMessage = response);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterLink],\n  styleUrls: ['./login.component.css']\n}), __metadata(\"design:paramtypes\", [CoreService, Router])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}