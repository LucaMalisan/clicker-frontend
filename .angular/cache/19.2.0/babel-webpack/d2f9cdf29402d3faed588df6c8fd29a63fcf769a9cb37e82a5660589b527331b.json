{"ast":null,"code":"import { CoreService } from \"../core.service\";\nimport { Router } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core.service\";\nimport * as i2 from \"@angular/router\";\nexport let TimerComponent = /*#__PURE__*/(() => {\n  class TimerComponent {\n    coreService;\n    router;\n    constructor(coreService, router) {\n      this.coreService = coreService;\n      this.router = router;\n    }\n    intervalId;\n    ngOnInit() {\n      this.coreService.initialized.subscribe(() => {\n        this.coreService.sendData(\"ready-for-game-start\", \"\");\n        this.coreService.listen(\"start-timer\", duration => this.startTimer(parseInt(duration)));\n        this.coreService.listen(\"stop-session\", () => {\n          console.log(\"stop-session\");\n          clearInterval(this.intervalId);\n          this.router.navigate([\"session-joining\"]);\n        });\n      });\n    }\n    totalDurationInMs;\n    hours;\n    minutes;\n    seconds;\n    startTimer(durationMinutes) {\n      this.totalDurationInMs = durationMinutes * 60 * 1000;\n      let deadline = Date.now() + this.totalDurationInMs;\n      this.intervalId = setInterval(() => this.refreshTime(deadline), 1000);\n    }\n    refreshTime(deadlineInMillis) {\n      let diff = deadlineInMillis - Date.now();\n      this.hours = Math.max(0, Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n      this.minutes = Math.max(0, Math.floor(diff % (1000 * 60 * 60) / (1000 * 60)));\n      this.seconds = Math.max(0, Math.floor(diff % (1000 * 60) / 1000));\n      this.progress(diff);\n    }\n    progress(timeLeft) {\n      let element = document.getElementById(\"progressBar\");\n      let progressBarWidth = timeLeft * element.clientWidth / this.totalDurationInMs;\n      element.querySelector('div').style.width = `${progressBarWidth}px`;\n    }\n    static ɵfac = function TimerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TimerComponent)(i0.ɵɵdirectiveInject(i1.CoreService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TimerComponent,\n      selectors: [[\"app-timer\"]],\n      decls: 20,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"row\", \"text-center\"], [\"id\", \"progressBar\"], [\"id\", \"countdown\"], [\"id\", \"hour\", 1, \"numbers\"], [1, \"name\"], [\"id\", \"minute\", 1, \"numbers\"], [\"id\", \"second\", 1, \"numbers\"]],\n      template: function TimerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"div\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ul\", 3)(5, \"li\")(6, \"span\", 4);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 5);\n          i0.ɵɵtext(9, \"hours\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"li\")(11, \"span\", 6);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"p\", 5);\n          i0.ɵɵtext(14, \"minutes\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"li\")(16, \"span\", 7);\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"p\", 5);\n          i0.ɵɵtext(19, \"seconds\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.hours);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.minutes);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.seconds);\n        }\n      },\n      styles: [\"h1[_ngcontent-%COMP%]{text-transform:uppercase}div.container[_ngcontent-%COMP%]{width:15%;position:absolute}p[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#d05656;font-weight:700}p[_ngcontent-%COMP%]{text-align:center;font-size:30px;margin-top:0}ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;display:flex;width:100%;justify-content:space-between}li[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px}.numbers[_ngcontent-%COMP%]{display:block;font-family:sans-serif;font-size:30px;line-height:1.5;margin:0 auto}.name[_ngcontent-%COMP%]{font-family:sans-serif;font-size:20px;line-height:1.5;margin:0 auto;text-align:center;position:relative;top:-25px}#progressBar[_ngcontent-%COMP%]{width:90%;margin:10px auto;height:22px;background-color:#efd0d0}#progressBar[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{height:100%;text-align:right;line-height:22px;width:0;background-color:#d05656;box-sizing:border-box}\"]\n    });\n  }\n  return TimerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}